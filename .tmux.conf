#   find and store current tmux version in an environment variable
run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | sed -En "s/^tmux ([0-9]+(\.[0-9]+)?.*/\1/p")'
#   find and store current OS name in an environment variable
run-shell 'uname setenv -g OS_NAME $(uname -s)'

set -g default-terminal "screen-256color"
setw -g xterm-keys on
set -g base-index 1
setw -g pane-base-index 1
#   set scrollback to 10K lines
set -g history-limit 10000
#   turn on clipboard support
set -g set-clipboard on
#   tmux prefix also use Ctrl+a
set -g prefix2 C-a
#   bind Ctrl+a+a back to Ctrl+a bash default
bind-key a send-prefix -2
#   tmux fast window switching with Ctrl+<-- / Ctrl+-->
bind-key -n C-Right select-window -n
bind-key -n C-Left select-window -p
#   tmux mouse support
set -g mouse on
#   bind copy keys for both emacs & vi mode
#   to send buffer to X clipboard
#   --- vi
if-shell -b '[ "${OS_NAME}" = "Darwin" ] && [ "$(echo "${TMUX_VERSION} < 2.4" | bc)" = 1 ]' \
" \
    bind-key -t vi-copy v begin-selection \
    bind-key -t vi-copy y copy-pipe 'reattach-to-user-namespace pbcopy' \
    unbind -t vi-copy Enter \
"
if-shell -b '[ "${OS_NAME}" = "Darwin" ] && [ "$(echo "${TMUX_VERSION} < 2.9" | bc)" = 1 ]' \
" \
    bind-key -T copy-mode-vi v send -X begin-selection \
    bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy' \
    bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy' \
    unbind -T copy-mode-vi Enter \
"
if-shell -b '[ "${OS_NAME}" = "Linux" ] && [ "$(echo "${TMUX_VERSION} < 2.4" | bc)" = 1 ]' \
" \
    bind-key -t vi-copy v begin-selection \
    bind-key -t vi-copy y copy-pipe 'xclip -i -f -selection primary | xclip -i -selection clipboard' \
    unbind -t vi-copy Enter \
"
if-shell -b '[ "${OS_NAME}" = "Linux" ] && [ "$(echo "${TMUX_VERSION} < 2.9" | bc)" = 1 ]' \
" \
    bind-key -T copy-mode-vi v send -X begin-selection \
    bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -i -f -selection primary | xclip -i -selection clipboard' \
    unbind -T copy-mode-vi Enter \
"
#   --- emacs
if-shell -b '[ "${OS_NAME}" = "Darwin" ] && [ "$(echo "${TMUX_VERSION} < 2.4" | bc)" = 1 ]' \
" \
    bind-key -t vi-copy Enter copy-pipe 'reattach-to-user-namespace pbcopy' \
    bind-key -t emacs-copy C-w copy-pipe 'reattach-to-user-namespace pbcopy' \
"
if-shell -b '[ "${OS_NAME}" = "Darwin" ] && [ "$(echo "${TMUX_VERSION} < 2.9" | bc)" = 1 ]' \
" \
    bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy' \
    bind-key -T emacs-copy C-w send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy' \
"
if-shell -b '[ "${OS_NAME}" = "Linux" ] && [ "$(echo "${TMUX_VERSION} < 2.4" | bc)" = 1 ]' \
" \
    bind-key -t vi-copy Enter copy-pipe 'xclip -i -f -selection primary | xclip -i -selection clipboard' \
    bind-key -t emacs-copy C-w copy-pipe 'xclip -i -f -selection primary | xclip -i -selection clipboard' \
"
if-shell -b '[ "${OS_NAME}" = "Linux" ] && [ "$(echo "${TMUX_VERSION} < 2.9" | bc)" = 1 ]' \
" \
    bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'xclip -i -f -selection primary | xclip -i -selection clipboard' \
    bind-key -T emacs-copy C-w send -X copy-pipe-and-cancel 'xclip -i -f -selection primary | xclip -i -selection clipboard' \
"
#   more user-friendly split commands
bind-key | split-window -h
bind-key - split-window -v
#   tmux status bar customization
set -g status-fg colour250
set -g status-bg colour233
#   --> left status bar
if-shell -b '[ "$(echo "${TMUX_VERSION} < 2.9" | bc)" = 1 ]' \
" \
    set -g status-left-bg colour233 \
    set -g status-left-fg colour243 \
"
if-shell -b '[ "$(echo "${TMUX_VERSION} >= 2.9" | bc)" = 1 ]' \
" \
    set -g status-left-style bg=redcolour233,fg=colour243 \
"
set -g status-left-length 40
set -g status-left "#{?client_prefix,#[fg=colour255]#[bg=colour31]#[bold] #{session_name} #[fg=colour31]#[bg=colour233],#[fg=colour232]#[bg=colour240]#[bold] #{session_name} #[fg=colour240]#[bg=colour233]}"
#   --> right status bar
if-shell -b '[ "$(echo "${TMUX_VERSION} < 2.9" | bc)" = 1 ]' \
" \
    set -g status-right-bg colour233 \
    set -g status-right-fg colour243 \
"
if-shell -b '[ "$(echo "${TMUX_VERSION} >= 2.9" | bc)" = 1 ]' \
" \
    set -g status-right-style bg=redcolour233,fg=colour243 \
"
set -g status-right-length 100
set -g status-right "#{net_speed} #[fg=colour236,bg=colour233]#[fg=colour255,bg=colour236] %H:%M #[fg=colour233,bg=colour236]#[fg=colour255,bg=colour233,bold] #{session_attached} #[fg=colour255,bg=colour233]#[fg=colour233,bg=colour255]  #(whoami)@#[fg=colour232,bg=colour255,bold]#H "
#   --> tab
set -g window-status-format " #{window_index}#{window_flags} #{window_name} "
set -g window-status-current-format "#[fg=colour233,bg=colour232]#[fg=colour226,bg=colour232] #{window_index}#{window_flags} #{window_name} #[fg=colour232,bg=colour233,nobold]"
#   --> current selected tab
if-shell -b '[ "$(echo "${TMUX_VERSION} < 2.9" | bc)" = 1 ]' \
" \
    set -g window-status-current-bg colour232 \
    set -g window-status-current-fg colour226 \
"
if-shell -b '[ "$(echo "${TMUX_VERSION} >= 2.9" | bc)" = 1 ]' \
" \
    set -g status-current-style bg=redcolour232,fg=colour226 \
"
